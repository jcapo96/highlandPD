- automatize CMakeList.txt:
   * NODEPHEADERS for MAC: i think this is only needed for LArSoftReader, currently not used
   * TENSORFLOW stuff
     -> I Think it would be good to have the opportunity of compiling HighLAND with and without tensorflow depending on what the analyzer wants to do (flag variable on CMakeList?)
     -> solution based on the existence of the folder /cvmfs/larsoft.opensciencegrid.org/

- create a pdBaseConverter
  * there are too many functions on the PDSPAnalizerConverter that the user does not need. The intermediante class would make it easier for the user.

- remove obsolete converters

- DO you need to add several MiniTreeConverters depending on the location of the MiniTree inside the root file ?

- think about versioning. For example issue a tag everytime we give a presentation

- dependencies of packages and impact on parameters files

- Review ToyBoxPD
  * DaughterDistanceToVertex not used anymore in pionSelection. To be removed from ToyBoxPD => removed
  * Move Candidates from ToyBoxPD to ToyBoxKaon => moved
  * ToyBoxPD has a method called Reset that does exactly the same as the ToyBoxB class. I have copied equally to ToyBoxPD. Is it needed?

- Review EventBoxPD. Having more than one interesting group gives problem. Not easy to understand. So far it has been more comfortable for me to create a new toybox for each new analysis/study developed rather than using an existing interesting group of EventBoxPD.

- Review cut indices in the header file of the selections. They are not currently used

- AnaDetectorInfoPD in pdDataClasses not used => removed

- Shall we clean up the pdDataClasses using forward declarations and explain a little bit about them so the user can understand the different relations?

- Review PDCounters and AnaWireCNN in pdDataClasses

- Review pdSystematics
  * CNNVariation  
  * HitVariation
  * LengthVariation  ===> to unusedCodeToRevisit

- Review pdCorrections
  * BeamMomSmearingCorrection: seedValue
  * dEdxCorrection: obsolete ? ==> yes, we should delete it
  * dEdxDataCorrection: obsolete ? ==> yes, we should delete it

- Review pdUtils
  * we should move all the CNN stuff inside the CNN folder so it is a black box and the pdUtils forder is not full of files that no analyzer is going to touch.
  * we should move HitVariationBase to pdBaseAnalysis ==> DONE
  * we should create our own version of CalorimetryAlg (pdCalorimetryUtils) to be user-friendly with the most important calorimetry functions. Also we should think about how to propagate systematic with calorimetric information (electron lifetime, modified box parameters, etc) ===> first pass DONE
- Several constants are defined in pdDataClasses.hxx, which are used in the standardPDTree. Should we move them to a namespace inside standardPDTree.hxx?

- The constructor of the pd analysis and the construnctor of the baseAnalysis do nothing. The only one that does something is the one of AnalysisAlgorithm. What is their utility?

- Probably add a method DefineCategories to AnalysisAlgorithm

- Merge pdBaseSelection and pandoraPreselection ==> DONE

- Standarize whateverCodePD and pdWatheverCode

- Think about the beam quality cuts (DeltaX, deltaY, deltaZ, cosTheta). It depents on each beam energy, run, etc. It is complicated to have a common cut for all analysis.

- Cmake17 does not like names with '/'. All dictionaries appear on  build folder now instead of build/dict. To be solved

- Why pdAnalysisUtils defines its own namespace (pdAnaUtils) instead of extend the AnaUtils namespace from highland? 

- Centralice CalorimetryCalibration

- Event selections do not work if you add splits before any cut. A first global cut is needed and then applying splits. Is this done on purpose? if not, it should be explained somewhere